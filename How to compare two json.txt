
1.How to compare two json have the same property without order
   a, let obj1 = { name: "Person 1",age: 5};
   b.let obj2 = { age: 2,name: "Person 1"};


Answer:
*Convert the JSON objects to strings.
*Parse the JSON strings to objects.
*Sort the properties of each object.
*Compare the sorted objects.

function compareJSON(json1, json2) {
    const obj1 = JSON.parse(json1);
    const obj2 = JSON.parse(json2);

    // Sort the properties of each object
    const sortedObj1 = sortObject(obj1);
    const sortedObj2 = sortObject(obj2);

    // Compare the sorted objects
    return JSON.stringify(sortedObj1) === JSON.stringify(sortedObj2);
}

function sortObject(obj) {
    // Sort the properties of the object
    const sortedObj = {};
    Object.keys(obj).sort().forEach(key => {
        sortedObj[key] = obj[key];
    });
    return sortedObj;
}

// Example usage
const obj1 = { name: "Person 1", age: 5 };
const obj2 = { age: 2, name: "Person 1" };

const result = compareJSON(JSON.stringify(obj1), JSON.stringify(obj2));
console.log(result); // true if the objects are equal without considering the order of properties

In this example, the compareJSON function takes two JSON strings, parses them into objects, 
sorts the properties of each object using the sortObject function, and then compares the sorted objects.
